/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterIndexImport } from './routes/register/index'
import { Route as OrderHistoryIndexImport } from './routes/order-history/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as CartIndexImport } from './routes/cart/index'
import { Route as IndexIndexImport } from './routes/_index/index'
import { Route as IndexItemIdImport } from './routes/_index/$itemId'

// Create/Update Routes

const RegisterIndexRoute = RegisterIndexImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => rootRoute,
} as any)

const OrderHistoryIndexRoute = OrderHistoryIndexImport.update({
  id: '/order-history/',
  path: '/order-history/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const CartIndexRoute = CartIndexImport.update({
  id: '/cart/',
  path: '/cart/',
  getParentRoute: () => rootRoute,
} as any)

const IndexIndexRoute = IndexIndexImport.update({
  id: '/_index/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const IndexItemIdRoute = IndexItemIdImport.update({
  id: '/_index/$itemId',
  path: '/$itemId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_index/$itemId': {
      id: '/_index/$itemId'
      path: '/$itemId'
      fullPath: '/$itemId'
      preLoaderRoute: typeof IndexItemIdImport
      parentRoute: typeof rootRoute
    }
    '/_index/': {
      id: '/_index/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexIndexImport
      parentRoute: typeof rootRoute
    }
    '/cart/': {
      id: '/cart/'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartIndexImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/order-history/': {
      id: '/order-history/'
      path: '/order-history'
      fullPath: '/order-history'
      preLoaderRoute: typeof OrderHistoryIndexImport
      parentRoute: typeof rootRoute
    }
    '/register/': {
      id: '/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/$itemId': typeof IndexItemIdRoute
  '/': typeof IndexIndexRoute
  '/cart': typeof CartIndexRoute
  '/login': typeof LoginIndexRoute
  '/order-history': typeof OrderHistoryIndexRoute
  '/register': typeof RegisterIndexRoute
}

export interface FileRoutesByTo {
  '/$itemId': typeof IndexItemIdRoute
  '/': typeof IndexIndexRoute
  '/cart': typeof CartIndexRoute
  '/login': typeof LoginIndexRoute
  '/order-history': typeof OrderHistoryIndexRoute
  '/register': typeof RegisterIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_index/$itemId': typeof IndexItemIdRoute
  '/_index/': typeof IndexIndexRoute
  '/cart/': typeof CartIndexRoute
  '/login/': typeof LoginIndexRoute
  '/order-history/': typeof OrderHistoryIndexRoute
  '/register/': typeof RegisterIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/$itemId'
    | '/'
    | '/cart'
    | '/login'
    | '/order-history'
    | '/register'
  fileRoutesByTo: FileRoutesByTo
  to: '/$itemId' | '/' | '/cart' | '/login' | '/order-history' | '/register'
  id:
    | '__root__'
    | '/_index/$itemId'
    | '/_index/'
    | '/cart/'
    | '/login/'
    | '/order-history/'
    | '/register/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexItemIdRoute: typeof IndexItemIdRoute
  IndexIndexRoute: typeof IndexIndexRoute
  CartIndexRoute: typeof CartIndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  OrderHistoryIndexRoute: typeof OrderHistoryIndexRoute
  RegisterIndexRoute: typeof RegisterIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexItemIdRoute: IndexItemIdRoute,
  IndexIndexRoute: IndexIndexRoute,
  CartIndexRoute: CartIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  OrderHistoryIndexRoute: OrderHistoryIndexRoute,
  RegisterIndexRoute: RegisterIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_index/$itemId",
        "/_index/",
        "/cart/",
        "/login/",
        "/order-history/",
        "/register/"
      ]
    },
    "/_index/$itemId": {
      "filePath": "_index/$itemId.tsx"
    },
    "/_index/": {
      "filePath": "_index/index.tsx"
    },
    "/cart/": {
      "filePath": "cart/index.tsx"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/order-history/": {
      "filePath": "order-history/index.tsx"
    },
    "/register/": {
      "filePath": "register/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
