/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterIndexImport } from './routes/register/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as ItemIndexImport } from './routes/item/index'
import { Route as CartIndexImport } from './routes/cart/index'
import { Route as OrderHistoryImport } from './routes/order/history'
import { Route as OrderFinishedImport } from './routes/order/finished'
import { Route as OrderConfirmImport } from './routes/order/confirm'
import { Route as ItemItemIdImport } from './routes/item/$itemId'

// Create/Update Routes

const RegisterIndexRoute = RegisterIndexImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const ItemIndexRoute = ItemIndexImport.update({
  id: '/item/',
  path: '/item/',
  getParentRoute: () => rootRoute,
} as any)

const CartIndexRoute = CartIndexImport.update({
  id: '/cart/',
  path: '/cart/',
  getParentRoute: () => rootRoute,
} as any)

const OrderHistoryRoute = OrderHistoryImport.update({
  id: '/order/history',
  path: '/order/history',
  getParentRoute: () => rootRoute,
} as any)

const OrderFinishedRoute = OrderFinishedImport.update({
  id: '/order/finished',
  path: '/order/finished',
  getParentRoute: () => rootRoute,
} as any)

const OrderConfirmRoute = OrderConfirmImport.update({
  id: '/order/confirm',
  path: '/order/confirm',
  getParentRoute: () => rootRoute,
} as any)

const ItemItemIdRoute = ItemItemIdImport.update({
  id: '/item/$itemId',
  path: '/item/$itemId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/item/$itemId': {
      id: '/item/$itemId'
      path: '/item/$itemId'
      fullPath: '/item/$itemId'
      preLoaderRoute: typeof ItemItemIdImport
      parentRoute: typeof rootRoute
    }
    '/order/confirm': {
      id: '/order/confirm'
      path: '/order/confirm'
      fullPath: '/order/confirm'
      preLoaderRoute: typeof OrderConfirmImport
      parentRoute: typeof rootRoute
    }
    '/order/finished': {
      id: '/order/finished'
      path: '/order/finished'
      fullPath: '/order/finished'
      preLoaderRoute: typeof OrderFinishedImport
      parentRoute: typeof rootRoute
    }
    '/order/history': {
      id: '/order/history'
      path: '/order/history'
      fullPath: '/order/history'
      preLoaderRoute: typeof OrderHistoryImport
      parentRoute: typeof rootRoute
    }
    '/cart/': {
      id: '/cart/'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartIndexImport
      parentRoute: typeof rootRoute
    }
    '/item/': {
      id: '/item/'
      path: '/item'
      fullPath: '/item'
      preLoaderRoute: typeof ItemIndexImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/register/': {
      id: '/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/item/$itemId': typeof ItemItemIdRoute
  '/order/confirm': typeof OrderConfirmRoute
  '/order/finished': typeof OrderFinishedRoute
  '/order/history': typeof OrderHistoryRoute
  '/cart': typeof CartIndexRoute
  '/item': typeof ItemIndexRoute
  '/login': typeof LoginIndexRoute
  '/register': typeof RegisterIndexRoute
}

export interface FileRoutesByTo {
  '/item/$itemId': typeof ItemItemIdRoute
  '/order/confirm': typeof OrderConfirmRoute
  '/order/finished': typeof OrderFinishedRoute
  '/order/history': typeof OrderHistoryRoute
  '/cart': typeof CartIndexRoute
  '/item': typeof ItemIndexRoute
  '/login': typeof LoginIndexRoute
  '/register': typeof RegisterIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/item/$itemId': typeof ItemItemIdRoute
  '/order/confirm': typeof OrderConfirmRoute
  '/order/finished': typeof OrderFinishedRoute
  '/order/history': typeof OrderHistoryRoute
  '/cart/': typeof CartIndexRoute
  '/item/': typeof ItemIndexRoute
  '/login/': typeof LoginIndexRoute
  '/register/': typeof RegisterIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/item/$itemId'
    | '/order/confirm'
    | '/order/finished'
    | '/order/history'
    | '/cart'
    | '/item'
    | '/login'
    | '/register'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/item/$itemId'
    | '/order/confirm'
    | '/order/finished'
    | '/order/history'
    | '/cart'
    | '/item'
    | '/login'
    | '/register'
  id:
    | '__root__'
    | '/item/$itemId'
    | '/order/confirm'
    | '/order/finished'
    | '/order/history'
    | '/cart/'
    | '/item/'
    | '/login/'
    | '/register/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  ItemItemIdRoute: typeof ItemItemIdRoute
  OrderConfirmRoute: typeof OrderConfirmRoute
  OrderFinishedRoute: typeof OrderFinishedRoute
  OrderHistoryRoute: typeof OrderHistoryRoute
  CartIndexRoute: typeof CartIndexRoute
  ItemIndexRoute: typeof ItemIndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  RegisterIndexRoute: typeof RegisterIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  ItemItemIdRoute: ItemItemIdRoute,
  OrderConfirmRoute: OrderConfirmRoute,
  OrderFinishedRoute: OrderFinishedRoute,
  OrderHistoryRoute: OrderHistoryRoute,
  CartIndexRoute: CartIndexRoute,
  ItemIndexRoute: ItemIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  RegisterIndexRoute: RegisterIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/item/$itemId",
        "/order/confirm",
        "/order/finished",
        "/order/history",
        "/cart/",
        "/item/",
        "/login/",
        "/register/"
      ]
    },
    "/item/$itemId": {
      "filePath": "item/$itemId.tsx"
    },
    "/order/confirm": {
      "filePath": "order/confirm.tsx"
    },
    "/order/finished": {
      "filePath": "order/finished.tsx"
    },
    "/order/history": {
      "filePath": "order/history.tsx"
    },
    "/cart/": {
      "filePath": "cart/index.tsx"
    },
    "/item/": {
      "filePath": "item/index.tsx"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/register/": {
      "filePath": "register/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
